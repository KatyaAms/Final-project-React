{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/Documents/Final project-React/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n\n  const [city, setCity] = useState(props.city);\n  const [weather, setWeather] = useState({\n    ready: false\n  });\n\n  function handleResponse(response) {\n    console.log(response.data);\n    setWeather({\n      ready: true,\n      date: new Date(response.data.dt * 1000),\n      temperature: response.data.main.temp,\n      wind: response.data.wind.speed,\n      city: response.data.name,\n      humidity: response.data.main.humidity,\n      description: response.data.weather[0].description,\n      iconUrl: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`\n    });\n  }\n\n  function search() {\n    const apiKey = \"cea4eaec36371a8d64cf80cfa988df3d\";\n    let apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search(city);\n  }\n\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n\n  if (weather.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-9\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              placeholder: \"Enter a city...\",\n              className: \"form-control\",\n              autoFocus: \"on\",\n              onChange: handleCityChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Search\",\n              className: \"btn btn-primary w-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {\n        data: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  } else {\n    search();\n    return \"Loading...\";\n  }\n}\n\n_s(Weather, \"dldUxGpPRqUFLhkF2TnXPiJrd4c=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/ekaterina/Documents/Final project-React/src/Weather.js"],"names":["React","useState","axios","WeatherInfo","Weather","props","city","setCity","weather","setWeather","ready","handleResponse","response","console","log","data","date","Date","dt","temperature","main","temp","wind","speed","name","humidity","description","iconUrl","icon","search","apiKey","apiUrl","get","then","handleSubmit","event","preventDefault","handleCityChange","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\nimport axios from \"axios\";\nimport \"./Weather.css\"\nimport WeatherInfo from \"./WeatherInfo\";\n\n\nexport default function Weather (props) \n{\nconst [city,setCity]=useState(props.city);\n  const [weather, setWeather]=useState({ready:false});\n\n  function handleResponse(response){\n    console.log(response.data);\n    setWeather({\n      ready: true,\n      date: new Date (response.data.dt*1000),\n      temperature:response.data.main.temp,\n      wind:response.data.wind.speed,\n      city:response.data.name,\n      humidity: response.data.main.humidity,\n      description:response.data.weather[0].description,\n      iconUrl:`http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n    });\n  }\n\nfunction search(){\nconst apiKey = \"cea4eaec36371a8d64cf80cfa988df3d\";\nlet apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\naxios.get(apiUrl).then(handleResponse);\n}\n\nfunction handleSubmit(event){\n  event.preventDefault();\n search (city);\n}\n\nfunction handleCityChange(event){\nsetCity(event.target.value);\n}\n\n  if (weather.ready){\n    return (<div className=\"Weather\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"row\">\n        <div className=\"col-9\">\n        <input type=\"search\"\n        placeholder=\"Enter a city...\"\n        className=\"form-control\"\n        autoFocus=\"on\"\n        onChange={handleCityChange}/>\n        </div>\n        <div className=\"col-3\">\n        <input type=\"submit\" value=\"Search\" className=\"btn btn-primary w-100\"/>\n      </div>\n      </div>\n      </form>\n      <WeatherInfo data={weather}/>\n    \n    </div>);\n    }\n    else {\n  search();\n  return \"Loading...\";}\n}\n     \n"]},"metadata":{},"sourceType":"module"}