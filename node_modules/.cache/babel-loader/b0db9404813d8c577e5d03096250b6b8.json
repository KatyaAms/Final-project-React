{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/Documents/Final project-React/src/WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./WeatherForecast.css\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  function forecastResponse(response) {\n    setForecast(response.data);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"10:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(WeatherIcon, {\n          code: forecast.list[0].weather[0].icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [Math.round(forecast.list[0].main.temp), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this);\n  } else {\n    let apiKey = \"cea4eaec36371a8d64cf80cfa988df3d\";\n    let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(forecastResponse);\n    return null;\n  }\n}\n\n_s(WeatherForecast, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/ekaterina/Documents/Final project-React/src/WeatherForecast.js"],"names":["React","useState","WeatherIcon","axios","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","forecastResponse","response","data","list","weather","icon","Math","round","main","temp","apiKey","url","city","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,uBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;;AAGI,WAASS,gBAAT,CAA0BC,QAA1B,EAAmC;AAC/BF,IAAAA,WAAW,CAACE,QAAQ,CAACC,IAAV,CAAX;AACAL,IAAAA,SAAS,CAAE,IAAF,CAAT;AAEH;;AAED,MAAID,MAAJ,EAAW;AAEP,wBACA;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEA,QAAC,WAAD;AAAa,UAAA,IAAI,EAAEE,QAAQ,CAACK,IAAT,CAAc,CAAd,EAAiBC,OAAjB,CAAyB,CAAzB,EAA4BC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA,qBAAMC,IAAI,CAACC,KAAL,CAAWT,QAAQ,CAACK,IAAT,CAAc,CAAd,EAAiBK,IAAjB,CAAsBC,IAAjC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADA;AAUH,GAZD,MAYK;AAEL,QAAIC,MAAM,GAAC,kCAAX;AACA,QAAIC,GAAG,GAAI,sDAAqDhB,KAAK,CAACiB,IAAK,UAASF,MAAO,eAA3F;AACJjB,IAAAA,KAAK,CAACoB,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAoBd,gBAApB;AAEI,WAAO,IAAP;AACH;AACA;;GAhCuBN,e;;KAAAA,e","sourcesContent":["import React, {useState} from 'react';\nimport \"./WeatherForecast.css\"\nimport WeatherIcon from \"./WeatherIcon\"\nimport axios from \"axios\";\n\n\nexport default function WeatherForecast(props) {\n\nconst [loaded, setLoaded]=useState(false);\nconst [forecast, setForecast]=useState(null);\n\n\n    function forecastResponse(response){\n        setForecast(response.data);\n        setLoaded (true);\n        \n    }\n\n    if (loaded){\n       \n        return (\n        <div className=\"WeatherForecast row\">\n        <div className=\"col-3\">\n         <div>10:00</div>\n        <WeatherIcon code={forecast.list[0].weather[0].icon}/>\n        <div>{Math.round(forecast.list[0].main.temp)}Â°C</div>\n        </div>\n\n        </div>\n        );\n    }else{\n\n    let apiKey=\"cea4eaec36371a8d64cf80cfa988df3d\"\n    let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\naxios.get(url).then(forecastResponse);\n\n    return null;\n}\n}"]},"metadata":{},"sourceType":"module"}