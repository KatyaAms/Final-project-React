{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./WeatherForecast.css\";\nimport axios from \"axios\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n\n  function forecastResponse(response) {\n    setLoaded(true);\n    console.log(response.data);\n  }\n\n  if (loaded) {\n    return \"Loading...\";\n  } else {\n    let apiKey = \"cea4eaec36371a8d64cf80cfa988df3d\";\n    let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(forecastResponse);\n    return null;\n  }\n}\n\n_s(WeatherForecast, \"5HkI/FtSFoHY/ZszUPbNWJy51d0=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/ekaterina/Documents/Final project-React/src/WeatherForecast.js"],"names":["React","axios","WeatherForecast","props","loaded","setLoaded","useState","forecastResponse","response","console","log","data","apiKey","url","city","get","then"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAoBC,QAAQ,CAAC,KAAD,CAAlC;;AAGI,WAASC,gBAAT,CAA0BC,QAA1B,EAAmC;AAC/BH,IAAAA,SAAS,CAAE,IAAF,CAAT;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAaF,QAAQ,CAACG,IAAtB;AACH;;AAED,MAAIP,MAAJ,EAAW;AACP,WAAO,YAAP;AACH,GAFD,MAEK;AAEL,QAAIQ,MAAM,GAAC,kCAAX;AACA,QAAIC,GAAG,GAAI,sDAAqDV,KAAK,CAACW,IAAK,UAASF,MAAO,eAA3F;AACJX,IAAAA,KAAK,CAACc,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAoBT,gBAApB;AAEI,WAAO,IAAP;AACH;AACA;;GApBuBL,e;;KAAAA,e","sourcesContent":["import React from 'react';\nimport \"./WeatherForecast.css\"\nimport axios from \"axios\";\n\n\nexport default function WeatherForecast(props) {\n\nconst [loaded, setLoaded]=useState(false);\n\n\n    function forecastResponse(response){\n        setLoaded (true);\n        console.log (response.data);\n    }\n\n    if (loaded){\n        return \"Loading...\";\n    }else{\n\n    let apiKey=\"cea4eaec36371a8d64cf80cfa988df3d\"\n    let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\naxios.get(url).then(forecastResponse);\n\n    return null;\n}\n}"]},"metadata":{},"sourceType":"module"}