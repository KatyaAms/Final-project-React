{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/Documents/Final project-React/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather() {\n  _s();\n\n  const [ready, setReady] = useState(false);\n  const [weather, setWeather] = useState({});\n\n  function handleResponse(response) {\n    console.log(response.data);\n    setWeather({\n      temperature: response.data.main.temp,\n      wind: response.data.wind.speed,\n      city: response.data.name,\n      humidity: response.data.main.humidity\n    });\n    setReady(true);\n  }\n\n  if (ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-9\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              placeholder: \"Enter a city...\",\n              className: \"form-control\",\n              autoFocus: \"on\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Search\",\n              className: \"btn btn-primary w-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: weather.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Wednesday, 21:24\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Raining\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://ssl.gstatic.com/onebox/weather/48/rain_s_cloudy.png\",\n            alt: \"raining\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"temperature\",\n            children: Math.round(weather.temperature)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"unit\",\n            children: \"\\xB0C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Precipitation: 15%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Humidity: \", weather.humidity, \"}%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Wind: \", Math.round(weather.wind), \" km/h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  } else {\n    const apiKey = \"cea4eaec36371a8d64cf80cfa988df3d\";\n    let city = \"Amsterdam\";\n    let apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return \"Loading...\";\n  }\n}\n\n_s(Weather, \"a8FdpRBiT8o2dv2wm6n+kmUqtQ4=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/ekaterina/Documents/Final project-React/src/Weather.js"],"names":["React","useState","axios","Weather","ready","setReady","weather","setWeather","handleResponse","response","console","log","data","temperature","main","temp","wind","speed","city","name","humidity","Math","round","apiKey","apiUrl","get","then"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\nimport axios from \"axios\";\nimport \"./Weather.css\"\n\n\nexport default function Weather (){\n  const [ready, setReady]=useState(false);\n  const [weather, setWeather]=useState({});\n\n  function handleResponse(response){\n    console.log(response.data);\n    setWeather({\n      temperature:response.data.main.temp,\n      wind:response.data.wind.speed,\n      city:response.data.name,\n      humidity: response.data.main.humidity,\n    });\n    setReady(true);\n  }\n\n  if (ready){\n    return (<div className=\"Weather\">\n      <form>\n        <div className=\"row\">\n        <div className=\"col-9\">\n        <input type=\"search\"\n        placeholder=\"Enter a city...\"\n        className=\"form-control\"\n        autoFocus=\"on\"/>\n        </div>\n        <div className=\"col-3\">\n        <input type=\"submit\" value=\"Search\" className=\"btn btn-primary w-100\"/>\n      </div>\n      </div>\n      </form>\n    <h1>{weather.city}</h1>\n    <ul>\n        <li>Wednesday, 21:24</li>\n        <li>Raining</li>\n    </ul>\n    <div className=\"row mt-3\">\n        <div className=\"col-6\">\n        <img src=\"https://ssl.gstatic.com/onebox/weather/48/rain_s_cloudy.png\" alt=\"raining\"></img>\n     \n     <span className=\"temperature\">{Math.round(weather.temperature)}</span>\n     <span className=\"unit\">°C</span>\n        </div>\n          <div className=\"col-6\">\n            <ul>\n              <li>Precipitation: 15%</li>\n              <li>Humidity: {weather.humidity}}%</li>\n              <li>Wind: {Math.round(weather.wind)} km/h</li>\n            </ul>\n          </div>\n    </div>\n    </div>);\n    }\n    else {\n  const apiKey = \"cea4eaec36371a8d64cf80cfa988df3d\";\n  let city =\"Amsterdam\";\n  let apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\n  axios.get(apiUrl).then(handleResponse);\n  return \"Loading...\";\n}\n     \n}"]},"metadata":{},"sourceType":"module"}